Build a python code assume you get temperature and humidity values and write a condition to continuously detect alarm in case of high temperature

Ardino code:

#include <SimpleDHT.h>
#include <LiquidCrystal.h>
char d;
// for DHT11, 
//      VCC: 5V or 3V
//      GND: GND
//      DATA: 2
int pinDHT11 = 8;
SimpleDHT11 dht11(pinDHT11);
LiquidCrystal lcd(2,3,4,5,6,7);

void setup() {
  Serial.begin(9600);
   lcd.begin(16, 2);
}

void loop() {
  if(Serial.available())
{
  d=Serial.read();
}
if (d=='a')
{
  
  
  // read without samples.
  byte temperature = 0;
  byte humidity = 0;
  int err = SimpleDHTErrSuccess;
  if ((err = dht11.read(&temperature, &humidity, NULL)) != SimpleDHTErrSuccess) {
    return;
  }
  //lcd.setCursor(0,0);
  //lcd.print("Temp is ");
  //lcd.print((int)temperature); lcd.print(" *C, "); 
  //lcd.setCursor(0,1);
  //lcd.print("Humidity:");
  //lcd.print((float)humidity);
  Serial.println(temperature);
  Serial.println(humidity);
  // DHT11 sampling rate is 1HZ.
  delay(1500);
}
}


Python code:

import serial
import time
import pyttsx3
import speech_recognition as sr 
def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 0.5
        audio = r.listen(source)
    try:
        print("Recognizing... wait a minute")    
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)    
        print("Say that again please... icannot recognizing")  
        query = "none"
    return query



def speak(audio):
    engine.say(audio)
    engine.runAndWait()
engine = pyttsx3.init('sapi5')
voices=engine.getProperty('voices')
engine.setProperty("voice",voices[0].id)
engine.setProperty("rate",140)
engine.setProperty("volume",1000)


if _name_ == "_main_":
    ard = serial.Serial('com10' ,9600)
    time.sleep(2)
  
    var = 'pt'
    query=takeCommand().lower()
    if 'tell me temperature' in query:
        var ='a'
        c=var.encode()
        speak("yeah..")

    if var == 'a':
        ard.write(c)
        time.sleep(1)
        iny =(ard.readline())
        iny=iny.decode()
        iny=str(iny)
        print(iny)
        speak(str(iny)+"degree centigrade is the temperature!!")

    if var == 'b':
        ard.write(c)
